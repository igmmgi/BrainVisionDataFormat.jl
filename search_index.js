var documenterSearchIndex = {"docs":
[{"location":"api/#API-Reference","page":"API Reference","title":"API Reference","text":"","category":"section"},{"location":"api/#Module","page":"API Reference","title":"Module","text":"","category":"section"},{"location":"api/#BrainVisionDataFormat","page":"API Reference","title":"BrainVisionDataFormat","text":"BrainVisionDataFormat\n\nJulia package for reading BrainVision EEG data files (.vhdr, .vmrk, .eeg format).\n\nThis package provides functionality to:\n\nRead BrainVision files (.vhdr, .vmrk, .eeg) into Julia data structures\n\nFile Format\n\nBrainVision files consist of three components:\n\n.vhdr: Header file with metadata and channel information\n.vmrk: Marker file with event/trigger information  \n.eeg: Binary data file with EEG samples\n\nQuick Start\n\nusing BrainVisionDataFormat\n\n# Read complete BrainVision dataset\ndata = read_brainvision(\"experiment\")\n\n# Read only markers\nmarkers = read_brainvision_markers(\"experiment.vmrk\")\n\n# Read only header\nheader = read_brainvision_header(\"experiment.vhdr\")\n\n\n\n\n\n","category":"module"},{"location":"api/#Data-Structures","page":"API Reference","title":"Data Structures","text":"","category":"section"},{"location":"api/#BrainVisionDataFormat.BrainVisionHeader","page":"API Reference","title":"BrainVisionDataFormat.BrainVisionHeader","text":"BrainVisionHeader\n\nRepresents header information from a BrainVision .vhdr file.\n\nFields\n\nDataFile::String: Name of the EEG data file\nMarkerFile::String: Name of the marker file\nDataFormat::String: Data format (e.g., \"BINARY\")\nDataOrientation::String: Data orientation (e.g., \"MULTIPLEXED\")\nBinaryFormat::String: Binary format specification\nNumberOfChannels::Int: Number of channels\nSamplingInterval::Float64: Sampling interval in microseconds\nFs::Float64: Sampling rate in Hz\nlabel::Vector{String}: Channel labels\nreference::Vector{String}: Reference information\nresolution::Vector{Float64}: Resolution values\nunit::Vector{String}: Unit information\nnSamples::Int: Number of samples\nnTrials::Int: Number of trials\nnSamplesPre::Int: Number of pre-stimulus samples\nimpedances::Union{NamedTuple, Nothing}: Impedance information if available\n\nExample\n\nheader = read_brainvision_header(\"experiment.vhdr\")\nprintln(\"Sampling rate: $(header.Fs) Hz\")\nprintln(\"Number of channels: $(header.NumberOfChannels)\")\n\n\n\n\n\n","category":"type"},{"location":"api/#BrainVisionDataFormat.BrainVisionMarker","page":"API Reference","title":"BrainVisionDataFormat.BrainVisionMarker","text":"BrainVisionMarker\n\nRepresents a single marker event from a BrainVision .vmrk file.\n\nFields\n\ntype::String: Event type (e.g., \"Stimulus\", \"Response\", \"New Segment\")\nvalue::String: Event value/description\nsample::Int: Sample number (position in data points)\nduration::Int: Duration in data points\ntimestamp::Union{String, Nothing}: Timestamp if available (raw string format)\n\nExample\n\nmarker = BrainVisionMarker(\"Stimulus\", \"S 11\", 209263, 1, nothing)\nprintln(\"Type: $(marker.type), Sample: $(marker.sample)\")\n\n\n\n\n\n","category":"type"},{"location":"api/#BrainVisionDataFormat.BrainVisionData","page":"API Reference","title":"BrainVisionDataFormat.BrainVisionData","text":"BrainVisionData\n\nContainer for complete BrainVision data including EEG data, markers, and header metadata.\n\nFields\n\ndata::Union{Matrix{Float64}, Nothing}: EEG data matrix (samples × channels)\nmarkers::Vector{BrainVisionMarker}: Array of marker events\nheader::Union{BrainVisionHeader, Nothing}: Header information\nfilename::String: Source filename\n\nExample\n\ndata = read_brainvision_complete(\"experiment.vhdr\")\nprintln(\"EEG data shape: $(size(data.data))\")\nprintln(\"Found $(length(data.markers)) events\")\n\n\n\n\n\n","category":"type"},{"location":"api/#BrainVisionDataFormat.BrainVisionMarkerData","page":"API Reference","title":"BrainVisionDataFormat.BrainVisionMarkerData","text":"BrainVisionMarkerData\n\nLegacy container for BrainVision data with only markers and metadata.\n\nFields\n\nmarkers::Vector{BrainVisionMarker}: Array of marker events\nfilename::String: Source filename\nn_events::Int: Number of events\nsampling_rate::Union{Float64, Nothing}: Sampling rate if available\n\nExample\n\ndata = read_brainvision(\"experiment.vmrk\")\nprintln(\"Found $(length(data.markers)) events\")\n\n\n\n\n\n","category":"type"},{"location":"api/#File-Reading-Functions","page":"API Reference","title":"File Reading Functions","text":"","category":"section"},{"location":"api/#Complete-Dataset-Reading","page":"API Reference","title":"Complete Dataset Reading","text":"","category":"section"},{"location":"api/#BrainVisionDataFormat.read_brainvision","page":"API Reference","title":"BrainVisionDataFormat.read_brainvision","text":"read_brainvision(base_filename; begsample=1, endsample=nothing, chanindx=nothing)\n\nRead complete BrainVision dataset from base filename (without extension).\n\nThis is the main entry point for reading BrainVision data. It loads the header, markers, and EEG data from the three-file BrainVision format (.vhdr, .vmrk, .eeg) and returns a complete dataset object.\n\nArguments\n\nbase_filename::String: Base filename without extension (e.g., \"experiment\" for \"experiment.vhdr\")\nbegsample::Int: First sample to read (1-indexed, default: 1)\nendsample::Union{Int, Nothing}: Last sample to read (default: all samples)\nchanindx::Union{AbstractVector{Int}, Nothing}: Channel indices to read (default: all channels)\n\nReturns\n\nBrainVisionData: Complete dataset with EEG data, markers, and header\n\nExamples\n\n# Load complete dataset\ndata = read_brainvision(\"experiment\")\n\n# Access components\ndata = data.data  # Matrix{Float64} (samples × channels)\nmarkers = data.markers    # Vector{BrainVisionMarker}\nheader = data.header      # BrainVisionHeader\n\n# Load specific time range\ndata = read_brainvision(\"experiment\", begsample=1000, endsample=5000)\n\n# Load specific channels\ndata = read_brainvision(\"experiment\", chanindx=1:10)\n\nNotes\n\nThe function automatically finds the corresponding .vhdr, .vmrk, and .eeg files\nAll three files must exist for successful loading\nEEG data is returned as a matrix with dimensions (samples × channels)\nData is automatically scaled to microvolts using resolution values from the header\n\nSee Also\n\nread_brainvision_header - Read only header\nread_brainvision_markers - Read only markers\n\n\n\n\n\n","category":"function"},{"location":"api/#Individual-Component-Reading","page":"API Reference","title":"Individual Component Reading","text":"","category":"section"},{"location":"api/#BrainVisionDataFormat.read_brainvision_header","page":"API Reference","title":"BrainVisionDataFormat.read_brainvision_header","text":"read_brainvision_header(filename)\n\nRead BrainVision header file (.vhdr) and return a BrainVisionHeader object.\n\nThis function parses the header file to extract all metadata including channel information, recording parameters, sampling rate, and file format specifications.\n\nArguments\n\nfilename::String: Path to the .vhdr file\n\nReturns\n\nBrainVisionHeader: Complete header information with all metadata\n\nExamples\n\n# Read header from file\nheader = read_brainvision_header(\"experiment.vhdr\")\n\n# Access header information\nprintln(\"Channels: \", header.NumberOfChannels)\nprintln(\"Sampling rate: \", header.Fs, \" Hz\")\nprintln(\"Data format: \", header.DataFormat)\n\nSee Also\n\nread_brainvision - Read complete dataset\nread_brainvision_markers - Read marker file\n\n\n\n\n\n","category":"function"},{"location":"api/#BrainVisionDataFormat.read_brainvision_markers","page":"API Reference","title":"BrainVisionDataFormat.read_brainvision_markers","text":"read_brainvision_markers(filename)\n\nRead BrainVision marker file (.vmrk) and return a BrainVisionMarkerData object.\n\nThis function parses the marker file to extract all event/trigger information including timestamps, durations, and marker types. Markers are commonly used to mark experimental events, artifacts, or other significant time points in the EEG recording.\n\nArguments\n\nfilename::String: Path to the .vmrk file\n\nReturns\n\nBrainVisionMarkerData: Container with all markers and metadata\n\nExamples\n\n# Read markers from file\nmarkers = read_brainvision_markers(\"experiment.vmrk\")\n\n# Access marker information\nprintln(\"Found \", markers.n_events, \" events\")\nfor marker in markers.markers\n    println(\"Event: \", marker.type, \" at sample \", marker.sample)\nend\n\nSee Also\n\nread_brainvision - Read complete dataset\nread_brainvision_header - Read header file\nget_markers_by_type - Filter markers by type\n\n\n\n\n\n","category":"function"},{"location":"api/#Utility-Functions","page":"API Reference","title":"Utility Functions","text":"","category":"section"},{"location":"api/#Marker-Processing","page":"API Reference","title":"Marker Processing","text":"","category":"section"},{"location":"api/#BrainVisionDataFormat.get_markers_by_type","page":"API Reference","title":"BrainVisionDataFormat.get_markers_by_type","text":"get_markers_by_type(data, type)\n\nGet all markers of a specific type.\n\nArguments\n\ndata::Union{BrainVisionData, BrainVisionMarkerData}: BrainVision data container\ntype::String: Marker type to filter by (e.g., \"Stimulus\", \"Response\")\n\nReturns\n\nVector{BrainVisionMarker}: Filtered markers of the specified type\n\nExample\n\nstimuli = get_markers_by_type(data, \"Stimulus\")\nprintln(\"Found $(length(stimuli)) stimulus events\")\n\n\n\n\n\n","category":"function"},{"location":"api/#BrainVisionDataFormat.get_markers_in_range","page":"API Reference","title":"BrainVisionDataFormat.get_markers_in_range","text":"get_markers_in_range(data, start_sample, end_sample)\n\nGet all markers within a sample range.\n\nArguments\n\ndata::Union{BrainVisionData, BrainVisionMarkerData}: BrainVision data container\nstart_sample::Int: First sample number (inclusive)\nend_sample::Int: Last sample number (inclusive)\n\nReturns\n\nVector{BrainVisionMarker}: Markers within the specified sample range\n\nExample\n\nearly_events = get_markers_in_range(data, 1, 100000)\nprintln(\"Found $(length(early_events)) events in first 100k samples\")\n\n\n\n\n\n","category":"function"},{"location":"api/#BrainVisionDataFormat.get_unique_types","page":"API Reference","title":"BrainVisionDataFormat.get_unique_types","text":"get_unique_types(data)\n\nGet all unique marker types in the data.\n\nArguments\n\ndata::Union{BrainVisionData, BrainVisionMarkerData}: BrainVision data container\n\nReturns\n\nVector{String}: Unique marker types found in the data\n\nExample\n\ntypes = get_unique_types(data)\nprintln(\"Found types: $types\")\n\n\n\n\n\n","category":"function"},{"location":"api/#Time-Conversion","page":"API Reference","title":"Time Conversion","text":"","category":"section"},{"location":"api/#BrainVisionDataFormat.samples_to_time","page":"API Reference","title":"BrainVisionDataFormat.samples_to_time","text":"samples_to_time(samples, sampling_rate)\n\nConvert sample numbers to time in seconds.\n\nArguments\n\nsamples::Union{Int, Vector{Int}}: Sample number(s) to convert\nsampling_rate::Float64: Sampling rate in Hz\n\nReturns\n\nUnion{Float64, Vector{Float64}}: Time in seconds\n\nExample\n\ntime_sec = samples_to_time(1000, 500.0)  # 2.0 seconds\ntimes = samples_to_time([1000, 2000, 3000], 500.0)  # [2.0, 4.0, 6.0] seconds\n\n\n\n\n\n","category":"function"},{"location":"#BrainVisionDataFormat","page":"Home","title":"BrainVisionDataFormat","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"A Julia package for reading and processing BrainVision EEG data files (.vhdr, .vmrk, .eeg format).","category":"page"},{"location":"#Overview","page":"Home","title":"Overview","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"BrainVision files are a standard format for EEG data storage, consisting of three interconnected files that store header metadata, event markers, and binary EEG data. This package provides comprehensive functionality to read and work with these files in Julia.","category":"page"},{"location":"#Features","page":"Home","title":"Features","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Complete BrainVision Support: Read all three file types (.vhdr, .vmrk, .eeg)\nFlexible Data Access: Read complete datasets or individual components\nMarker Processing: Extract and filter event markers and triggers\nChannel Management: Access channel information, labels, and metadata\nData Validation: Built-in file consistency checks\nUtility Functions: Time conversion, marker filtering, and data analysis tools","category":"page"},{"location":"#Quick-Start","page":"Home","title":"Quick Start","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"using BrainVisionDataFormat\n\n# Read complete BrainVision dataset\ndata = read_brainvision(\"experiment\")\n\n# Access EEG data and metadata\neeg_data = data.data  # Matrix{Float64} (samples × channels)\nheader = data.header      # BrainVisionHeader with all metadata\nmarkers = data.markers    # Vector{BrainVisionMarker} with events\n\n# Read individual components\nheader = read_brainvision_header(\"experiment.vhdr\")\nmarkers = read_brainvision_markers(\"experiment.vmrk\")\neeg_data = read_brainvision_data(\"experiment.eeg\")\n\n# Work with markers\nstimulus_markers = get_markers_by_type(data, \"Stimulus\")\nearly_events = get_markers_in_range(data, 1, 10000)\nunique_types = get_unique_types(data)\n\n# Convert samples to time\ntime_sec = samples_to_time(1000, header.Fs)  # Convert sample 1000 to seconds","category":"page"},{"location":"#Installation","page":"Home","title":"Installation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"using Pkg\nPkg.add(\"BrainVisionDataFormat\")","category":"page"},{"location":"#Documentation","page":"Home","title":"Documentation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"API Reference","category":"page"}]
}
